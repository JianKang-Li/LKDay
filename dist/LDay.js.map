{"version":3,"file":"LDay.js","mappings":"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","sources":["webpack://LDay/webpack/universalModuleDefinition","webpack://LDay/webpack/bootstrap","webpack://LDay/webpack/runtime/define property getters","webpack://LDay/webpack/runtime/hasOwnProperty shorthand","webpack://LDay/./src/LDay.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LDay\"] = factory();\n\telse\n\t\troot[\"LDay\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n* param:String\n* return:{\"key\":num}\n**/\nfunction Char_stati(text) {\n    let SArray = new Array()\n    for (let i = 0; i < text.length; i++) {\n        let obj = {}\n        obj[text[i]] = 1\n        let k = 1\n        while (i < text.length && text[i + 1] === text[i]) {\n            k++\n            i++\n        }\n        obj[text[i]] = k\n        SArray.push(obj)\n    }\n    return SArray\n}\n\nclass Day {\n\n    constructor(date) {\n        this.date = date ? new Date(date) : new Date();\n        this.Months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        this.$Y = this.date.getFullYear();\n        this.$M = this.date.getMonth() + 1;\n        this.$D = this.date.getDate();\n        this.$W = this.date.getDay();\n        this.$h = this.date.getHours();\n        this.$m = this.date.getMinutes();\n        this.$s = this.date.getSeconds();\n        this.$t = this.date.getTime();\n        this.$L = this.isLeap();\n    }\n\n    /* 判断是否是闰年 */\n    isLeap() {\n        let flag = (this.$Y % 4 === 0 && this.$Y !== 0) || this.$Y % 400 === 0;\n        if (flag) {\n            this.Months[1] = 29;\n        }\n        return (this.$Y % 4 === 0 && this.$Y !== 0) || this.$Y % 400 === 0;\n    }\n\n    /* 格式化 */\n    format(pattern = \"YYYY-MM-DD\") {\n        // switch (pattern) {\n        //     case \"YYYY-MM-DD\":\n        //         return `${this.$Y.toString().padStart(4, \"0\")}-${this.$M\n        //             .toString()\n        //             .padStart(2, \"0\")}-${this.$D.toString().padStart(2, \"0\")}`;\n\n        //     default: {\n        //         return `${this.$Y}-${this.$M}-${this.$D}`;\n        //     }\n        // }\n        if (!pattern) {\n            return `${this.$Y}-${this.$M}-${this.$D}`;\n        } else {\n            let SArray = Char_stati(pattern)\n            let Tstring = ''\n            for (let i of SArray) {\n                let key = Object.keys(i)[0]\n                let num = i[key]\n                switch (key) {\n                    case 'Y': {\n                        Tstring += `${this.$Y.toString().padStart(num, \"0\")}`\n                        break;\n                    }\n                    case \"M\": {\n                        Tstring += `${this.$M.toString().padStart(num, \"0\")}`\n                        break;\n                    }\n                    case \"D\": {\n                        Tstring += `${this.$D.toString().padStart(num, \"0\")}`\n                        break;\n                    }\n                    case \"h\": {\n                        Tstring += `${this.$h.toString().padStart(num, \"0\")}`\n                        break;\n                    }\n                    case \"m\": {\n                        Tstring += `${this.$m.toString().padStart(num, \"0\")}`\n                        break;\n                    }\n                    case \"s\": {\n                        Tstring += `${this.$s.toString().padStart(num, \"0\")}`\n                        break;\n                    }\n                    default: {\n                        Tstring += `${key.repeat(num)}`\n                    }\n                }\n            }\n            return Tstring\n        }\n    }\n\n    /* 是否相同时间 */\n    isSame(otherDate) {\n        return this.$t - otherDate.$t === 0;\n    }\n\n    /* 获取是一周第几天 */\n    day() {\n        return this.$W === 0 ? 7 : this.$W;\n    }\n\n    /* 一年内第几天 */\n    dayOfYear() {\n        let num = this.$D;\n        for (let i = 0; i < this.$M - 1; i++) {\n            num += this.Months[i];\n        }\n        if (this.$L) {\n            num++;\n        }\n        return num;\n    }\n\n    /* 一年内第几周 */\n    week() {\n        const firstday = new Date(`${this.$Y} 1 1`);\n        const diff = this.$t - firstday.getTime();\n        const days = Math.ceil(diff / 86400000);\n        return Math.ceil(days / 7) + 1;\n    }\n\n    /* 加 */\n    add(num, key) {\n        let Y = this.$Y;\n        let M = this.$M;\n        let t = this.$t;\n        let nums;\n        const keys = [\"y\", \"year\", \"M\", \"month\"];\n        let flag = keys.includes(key);\n        function addT(numT) {\n            let res = t + numT;\n            return res;\n        }\n        switch (key) {\n            case \"y\":\n            case \"year\":\n                Y = Y + num;\n                break;\n            case \"M\":\n            case \"month\":\n                M = M - 1 + num;\n                if (M > 12) {\n                    Y = Y + Math.floor(M / 12);\n                    M = (M % 12) + 1;\n                }\n                break;\n            case \"d\":\n            case \"date\":\n                nums = num * 1000 * 60 * 60 * 24;\n                break;\n            case \"h\":\n            case \"hour\":\n                nums = num * 1000 * 60 * 60;\n                break;\n            case \"m\":\n            case \"minute\":\n                nums = num * 1000 * 60;\n                break;\n            case \"s\":\n            case \"second\":\n                nums = num * 1000;\n                break;\n            case \"ms\":\n            case \"millisecond\":\n                break;\n        }\n        let para = flag\n            ? `${Y} ${M} ${this.$D} ${this.$h}:${this.$m}:${this.$s}`\n            : addT(nums);\n\n        return new Day(para);\n    }\n\n    /* 减 */\n    subtract(num, key) {\n        let Y = this.$Y;\n        let M = this.$M;\n        let t = this.$t;\n        let nums;\n        const keys = [\"y\", \"year\", \"M\", \"month\"];\n        let flag = keys.includes(key);\n        function subT(num) {\n            let res = t - num;\n            return res;\n        }\n        switch (key) {\n            case \"y\":\n            case \"year\":\n                Y = Y - num;\n                break;\n            case \"M\":\n            case \"month\":\n                M = M - num;\n                if (M < 0) {\n                    let n = Math.floor(M / 12);\n                    Y = Y + n;\n                    M = Math.abs(n) * 12 + M;\n                    if (M === 0) {\n                        Y = Y - 1;\n                        M = 12;\n                    }\n                } else if (M === 0) {\n                    Y = Y - 1;\n                    M = 12;\n                }\n                break;\n            case \"d\":\n            case \"date\":\n                nums = num * 1000 * 60 * 60 * 24;\n                break;\n            case \"h\":\n            case \"hour\":\n                nums = num * 1000 * 60 * 60;\n                break;\n            case \"m\":\n            case \"minute\":\n                nums = num * 1000 * 60;\n                break;\n            case \"s\":\n            case \"second\":\n                nums = num * 1000;\n                break;\n            case \"ms\":\n            case \"millisecond\":\n                break;\n        }\n        let para = flag\n            ? `${Y} ${M} ${this.$D} ${this.$h}:${this.$m}:${this.$s}`\n            : subT(nums);\n\n        return new Day(para);\n    }\n\n    /* 获取本月天数 */\n    daysInMonth() {\n        return this.Months[this.$M - 1];\n    }\n\n    /* 获取数据 */\n    get(id) {\n        let key = id || \"\";\n        switch (key) {\n            case \"y\":\n            case \"year\":\n                return this.$Y;\n            case \"M\":\n            case \"month\":\n                return this.$M;\n            case \"d\":\n            case \"date\":\n                return this.$D;\n            case \"h\":\n            case \"hour\":\n                return this.$h;\n            case \"m\":\n            case \"minute\":\n                return this.$m;\n            case \"s\":\n            case \"second\":\n                return this.$s;\n            case \"ms\":\n            case \"millisecond\":\n                return this.$t;\n            case \"w\":\n            case \"day\":\n                return this.$W;\n            default:\n                return this[key];\n        }\n    }\n\n    /* 格式转换 */\n    toArray() {\n        // 年 月 日 时 分 秒 星期几(从0开始)\n        return [\n            this.$Y,\n            this.$M,\n            this.$D,\n            this.$h,\n            this.$m,\n            this.$s,\n            this.$W === 0 ? 7 : this.$W,\n        ];\n    }\n}\n\n\nconst oldPro = Day.prototype\n\nfunction Lday(date) {\n    return new Day(date);\n}\n\nLday.extend = (plugin, option) => {\n    plugin(Lday, oldPro, option)\n}\n\n\n/* 构造函数 */\nexport default Lday\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Day","constructor","date","this","Date","Months","$Y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$h","getHours","$m","getMinutes","$s","getSeconds","$t","getTime","$L","isLeap","format","pattern","SArray","text","Array","i","length","k","push","Char_stati","Tstring","keys","num","toString","padStart","repeat","isSame","otherDate","day","dayOfYear","week","firstday","diff","days","Math","ceil","add","nums","Y","M","t","flag","includes","floor","para","subtract","n","abs","subT","daysInMonth","id","toArray","oldPro","Lday","extend","plugin","option"],"sourceRoot":""}